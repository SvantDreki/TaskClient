{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/SideBar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","contextAuth","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","setUsuario","onChange","e","target","name","value","onSubmit","preventDefault","trim","className","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorFormulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","setProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","tareaContext","_id","ListadoProyectos","proyectos","obtenerProyectos","map","SideBar","Barra","AuthContext","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaSeleccionada","errorTarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","setTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","tareaActual","estado","ListadoTareas","eliminarProyecto","tareasProyecto","classNames","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","tareaReducer","params","tareas","console","log","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","inicialState","getItem","authReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5d9a38a8.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport authContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Login = (props) => {\r\n\r\n    //Extraer valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const contextAuth = useContext(authContext);\r\n    const { mensaje, autenticado, iniciarSesion } = contextAuth;\r\n\r\n    // si el usuario no existe o el password incorrecto\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    const [ usuario, setUsuario ] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = usuario;\r\n\r\n    const onChange = e => {\r\n        setUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar que no haya campos vacios\r\n        if(email.trim() === '' || password.trim() === '') {\r\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n        }\r\n\r\n        //Pasarlo al action\r\n        iniciarSesion({ email, password });\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n\r\n            {alerta ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div> ) : null}\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Iniciar Sesión</h1>\r\n\r\n                <form \r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Iniciar Sesión\"\r\n                            onSubmit={onSubmit}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\r\n                    Obtener Cuenta\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { useState, useContext, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport authContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst NuevaCuenta = (props) => {\r\n\r\n    //Extraer valores del context\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    const contextAuth = useContext(authContext);\r\n    const { mensaje, autenticado, registrarUsuario } = contextAuth;\r\n\r\n    //En caso de que el usuario se haya autenticado, registrado o sea un registro duplicado\r\n    useEffect(() => {\r\n        if(autenticado) {\r\n            props.history.push('/proyectos');\r\n        }\r\n\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n    }, [mensaje, autenticado, props.history]);\r\n\r\n    const [ usuario, setUsuario ] = useState({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        confirmar: ''\r\n    });\r\n\r\n    const { nombre, email, password, confirmar } = usuario;\r\n\r\n    const onChange = e => {\r\n        setUsuario({\r\n            ...usuario,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar que no hayan campos vacios\r\n        if( nombre.trim() === '' ||\r\n            email.trim() === '' ||\r\n            password.trim() === '' ||\r\n            confirmar.trim() === '' ) {\r\n                mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\r\n                return;\r\n        }\r\n\r\n        //Password minimo de 6 caracteres\r\n        if(password.length < 6) {\r\n            mostrarAlerta('El password debe de ser al menos 6 caracteres', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //los 2 password son iguales\r\n        if(password !== confirmar) {\r\n            mostrarAlerta('Los password no son iguales', 'alerta-error');\r\n            return;\r\n        }\r\n\r\n        //Pasarlo al action\r\n        registrarUsuario({\r\n            nombre, \r\n            email,\r\n            password\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-usuario\">\r\n\r\n            {alerta ? ( <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div> ) : null}\r\n\r\n            <div className=\"contenedor-form sombra-dark\">\r\n                <h1>Obtener Una Cuenta</h1>\r\n\r\n                <form \r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"nombre\"\r\n                            name=\"nombre\"\r\n                            placeholder=\"Tu Nombre\"\r\n                            value={nombre}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Tu Email\"\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Tu Password\"\r\n                            value={password}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"confirmar\"\r\n                            name=\"confirmar\"\r\n                            placeholder=\"Repite tu Password\"\r\n                            value={confirmar}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"campo-form\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btn btn-primario btn-block\"\r\n                            value=\"Registrar\"\r\n                            onSubmit={onSubmit}\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                    Volver a Iniciar Sesión\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NuevaCuenta\r\n","import { createContext } from 'react'\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import { Fragment, useState, useContext } from 'react';\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { formulario, errorFormulario, mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext;\r\n\r\n    const [ proyecto, setProyecto ] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    const { nombre } = proyecto;\r\n\r\n    const onChangeProyecto = e => {\r\n        setProyecto({\r\n            ...proyecto,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar el proyecto\r\n        if(nombre === '') {\r\n            mostrarError();\r\n            return;\r\n        }\r\n\r\n        //agregar el state\r\n        agregarProyecto(proyecto);\r\n\r\n        //reiniciar el form\r\n        setProyecto({\r\n            nombre: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={() => mostrarFormulario()}\r\n            >\r\n                Nuevo Proyecto\r\n            </button>\r\n\r\n            {   formulario \r\n                ?\r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={onSubmitProyecto}\r\n                        >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Nombre Proyecto\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeProyecto}\r\n                            />\r\n\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Agregar Proyecto\"\r\n                            />\r\n                        </form>\r\n                    )\r\n                : null }\r\n            { errorFormulario ? <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> : null }    \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NuevoProyecto\r\n","import { createContext } from 'react';\r\n\r\nconst TareaContext = createContext();\r\n\r\nexport default TareaContext;\r\n","import { useContext } from 'react';\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst Proyecto = ({proyecto}) => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyectoActual } = proyectosContext;\r\n\r\n    //context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { obtenerTareas } = tareasContext;\r\n\r\n    const seleccionarProyecto = id => {\r\n        proyectoActual(id); //proyecto actual\r\n        obtenerTareas(id); //tareas del proyecto actual\r\n    }\r\n\r\n    return (\r\n        <li>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-blank\"\r\n                onClick={() => seleccionarProyecto(proyecto._id)}\r\n            >\r\n                {proyecto.nombre}\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Proyecto\r\n","import { useContext, useEffect } from 'react'\r\nimport Proyecto from \"./Proyecto\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\n\r\nconst ListadoProyectos = () => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n    const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n    useEffect(() => {\r\n\r\n        //Si hay un error\r\n        if(mensaje) {\r\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n        }\r\n        obtenerProyectos();\r\n    }, [mensaje]);\r\n\r\n    if(proyectos.length === 0) return <p>no hay proyectos, comienza creando uno</p>;\r\n\r\n    return (\r\n        <ul className=\"listado-proyectos\">\r\n            { alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null }\r\n            {proyectos.map(proyecto => (\r\n                <Proyecto \r\n                    key={proyecto._id}\r\n                    proyecto={proyecto}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListadoProyectos\r\n","import NuevoProyecto from \"../proyectos/NuevoProyecto\";\r\nimport ListadoProyectos from \"../proyectos/ListadoProyectos\";\r\n\r\nconst SideBar = () => {\r\n    return (\r\n        <aside>\r\n            <h1>MERN<span>Tasks</span></h1>\r\n\r\n            <NuevoProyecto />\r\n\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos />\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","import { useContext, useEffect } from 'react'\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Barra = () => {\r\n\r\n    //Extraer la informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n    }, []);\r\n\r\n    return (\r\n        <header className=\"app-header\">\r\n            {usuario ? <p className=\"nombre-usuario\">Hola <span>{ usuario.nombre }</span></p> : null}\r\n\r\n            <nav className=\"nav-principal\">\r\n                <button\r\n                    className=\"btn btn-blank cerrar-sesion\"\r\n                    onClick={() => cerrarSesion()}\r\n                >\r\n                    Cerrar Sesión\r\n                </button>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Barra\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst FormTarea = () => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Obtener context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaSeleccionada, errorTarea, obtenerTareas, agregarTarea, validarTarea, \r\n            actualizarTarea, limpiarTarea } = tareasContext\r\n\r\n    useEffect(() => {\r\n        if(tareaSeleccionada !== null) {\r\n            setTarea(tareaSeleccionada);\r\n        } else {\r\n            setTarea({\r\n                nombre: ''\r\n            });\r\n        }\r\n    }, [tareaSeleccionada]);\r\n\r\n    //State del formulario\r\n    const [ tarea, setTarea ] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    const { nombre } = tarea;\r\n\r\n    //Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    //Leer los valores del formulario\r\n    const handleChange = e => {\r\n        setTarea({\r\n            ...tarea,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    //Extraer el proyecto actual\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if(nombre.trim() === '') {\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n        //Revisar si es edicion o agregar\r\n        if(tareaSeleccionada === null) {\r\n            //agregar la nueva tarea\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        } else {\r\n            actualizarTarea(tarea);\r\n            limpiarTarea();\r\n        }\r\n\r\n        //Obtener y filtrar tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n\r\n        //reiniciar el form\r\n        setTarea({\r\n            nombre: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaSeleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            {errorTarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTarea;\r\n","import { useContext } from 'react'\r\n\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst Tarea = ({tarea}) => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    //Extraer el proyecto actual\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n\r\n    //Obtener context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { obtenerTareas, eliminarTarea, guardarTareaActual, actualizarTarea } = tareasContext\r\n\r\n    const tareaElimininar = id => {\r\n        eliminarTarea(id, proyectoActual._id);\r\n        obtenerTareas(proyectoActual._id);\r\n    }\r\n\r\n    const cambiarEstado = tareaActual => {\r\n        if(tareaActual.estado) {\r\n            tareaActual.estado = false;\r\n        } else {\r\n            tareaActual.estado = true;\r\n        }\r\n\r\n        actualizarTarea(tareaActual);\r\n    }\r\n\r\n    const seleccionarTarea = tareaActual => {\r\n        guardarTareaActual(tareaActual);\r\n    }\r\n\r\n    return (\r\n        <li className=\"tarea sombra\">\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado\r\n                    ?\r\n                        (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"completo\"\r\n                                onClick={() => cambiarEstado(tarea)}\r\n                            >\r\n                                Completo\r\n                            </button>\r\n                        )\r\n                    :\r\n                        (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"incompleto\"\r\n                                onClick={() => cambiarEstado(tarea)}\r\n                            >\r\n                                    incompleto\r\n                            </button>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"acciones\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={() => seleccionarTarea(tarea)}\r\n                >\r\n                    Editar\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={() => tareaElimininar(tarea._id)}\r\n                >\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Tarea\r\n","import { Fragment, useContext } from 'react';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Tarea from './Tarea';\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst ListadoTareas = () => {\r\n\r\n    //Obtener el state del formulario(proyectoContext)\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n    //context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareasProyecto } = tareasContext;\r\n\r\n    //Si no hay proyecto seleccionado\r\n    if(!proyecto) return <h2>Selecciona un proyecto</h2>\r\n\r\n    //Extraer el proyecto actual\r\n    const [ proyectoActual ] = proyecto;\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n\r\n            <ul className=\"listado-tareas\">\r\n                {tareasProyecto.length === 0\r\n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n                    : \r\n                        (tareasProyecto.map(tarea => (\r\n                            \r\n                            <Tarea\r\n                                key={tarea._id}\r\n                                classNames=\"tarea\"\r\n                                tarea={tarea}\r\n                            />\r\n                            \r\n                        ))) \r\n                }\r\n            </ul>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-eliminar\"\r\n                onClick={() => eliminarProyecto(proyectoActual._id)}\r\n            >\r\n                Eliminar Proyecto &times;\r\n            </button>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListadoTareas\r\n","import { useContext, useEffect } from \"react\";\r\nimport SideBar from \"../layout/SideBar\";\r\nimport Barra from \"../layout/Barra\";\r\nimport FormTarea from \"../tareas/FormTarea\";\r\nimport ListadoTareas from \"../tareas/ListadoTareas\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Proyectos = () => {\r\n\r\n    //Extraer la informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const { usuarioAutenticado } = authContext;\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"contenedor-app\">     \r\n            <SideBar />\r\n            <div className=\"seccion-principal\">\r\n                <Barra />\r\n                <main>\r\n                    <FormTarea />\r\n                    <div className=\"Contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Proyectos\r\n","\r\nexport const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import { FORMULARIO_PROYECTO, \r\n         OBTENER_PROYECTOS,\r\n         AGREGAR_PROYECTO,\r\n         VALIDAR_FORMULARIO,\r\n         PROYECTO_ACTUAL,\r\n         ELIMINAR_PROYECTO,\r\n         PROYECTO_ERROR\r\n       } from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n    switch(action.type) {\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario: true\r\n            }\r\n        case OBTENER_PROYECTOS:\r\n            return {\r\n                ...state,\r\n                proyectos: action.payload\r\n            }\r\n        case AGREGAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: [...state.proyectos, action.payload],\r\n                formulario: false,\r\n                errorFormulario: false\r\n            }\r\n        case VALIDAR_FORMULARIO:\r\n            return {\r\n                ...state,\r\n                errorFormulario: true\r\n            }\r\n        case PROYECTO_ACTUAL:\r\n            return {\r\n                ...state,\r\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\r\n            }\r\n        case ELIMINAR_PROYECTO:\r\n            return {\r\n                ...state,\r\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\r\n                proyecto: null\r\n            }\r\n        case PROYECTO_ERROR:\r\n            return {\r\n                ...state,\r\n                mensaje: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import { useReducer } from 'react';\r\nimport { FORMULARIO_PROYECTO, \r\n         OBTENER_PROYECTOS,\r\n         AGREGAR_PROYECTO,\r\n         PROYECTO_ERROR,\r\n         VALIDAR_FORMULARIO,\r\n         PROYECTO_ACTUAL,\r\n         ELIMINAR_PROYECTO\r\n       } from \"../../types\";\r\n\r\nimport proyectoContext from \"./proyectoContext\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst ProyectoState = props => {\r\n    \r\n    const inicialState = {\r\n        proyectos : [],\r\n        formulario: false,\r\n        errorFormulario: false,\r\n        proyecto: null,\r\n        mensaje: null\r\n    }\r\n\r\n    //Dispatch para ejecutar las acciones\r\n    const [ state, dispatch ] = useReducer(proyectoReducer, inicialState);\r\n\r\n    //Serie de funciones para el CRUD\r\n    const mostrarFormulario = () => {\r\n        dispatch({\r\n            type: FORMULARIO_PROYECTO\r\n        });\r\n    }\r\n\r\n    //Obtener Proyectos\r\n    const obtenerProyectos = async () => {\r\n        try {\r\n\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n\r\n            dispatch({\r\n                type: OBTENER_PROYECTOS,\r\n                payload: resultado.data.proyectos\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //Agregar nuevo proyecto\r\n    const agregarProyecto = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos' , proyecto);\r\n\r\n            //Insertar el proyecto en el state\r\n            dispatch({\r\n                type: AGREGAR_PROYECTO,\r\n                payload: resultado.data\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //Validar formulario por errores\r\n    const mostrarError = () => {\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO\r\n        });\r\n    }\r\n\r\n    //Selecciona el proyecto que el usuario dio click\r\n    const proyectoActual = proyectoId => {\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload: proyectoId\r\n        });\r\n    }\r\n\r\n    //Elimina un proyecto\r\n    const eliminarProyecto = async proyectoId => {\r\n        try {\r\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type: ELIMINAR_PROYECTO,\r\n                payload: proyectoId\r\n            });\r\n        } catch (error) {\r\n            const alerta = {\r\n                msg: 'Hubo un error',\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: PROYECTO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos: state.proyectos,\r\n                formulario: state.formulario,\r\n                errorFormulario: state.errorFormulario,\r\n                proyecto: state.proyecto,\r\n                mensaje: state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n        >\r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ProyectoState;","import {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    ESTADO_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from \"../../types\";\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case TAREAS_PROYECTO:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: action.payload\r\n            }\r\n        case AGREGAR_TAREA: \r\n            return {\r\n                ...state,\r\n                tareasProyecto: [...state.tareasProyecto, action.payload],\r\n                errorTarea: false\r\n            }\r\n        case VALIDAR_TAREA: \r\n            return {\r\n                ...state,\r\n                errorTarea: true\r\n            }\r\n        case ELIMINAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.filter(tarea => tarea._id !== action.payload)\r\n            }\r\n        case ACTUALIZAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareasProyecto: state.tareasProyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea)\r\n            }\r\n        case TAREA_ACTUAL:\r\n            return {\r\n                ...state,\r\n                tareaSeleccionada: action.payload\r\n            }\r\n        case LIMPIAR_TAREA:\r\n            return {\r\n                ...state,\r\n                tareaSeleccionada: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { useReducer } from 'react';\r\n\r\nimport TareaContext from \"./tareaContext\";\r\nimport tareaReducer from \"./tareaReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA,\r\n    LIMPIAR_TAREA\r\n} from \"../../types\";\r\n\r\nconst TareaState = props => {\r\n    const inicialState = {\r\n        tareasProyecto: [],\r\n        errorTarea: false,\r\n        tareaSeleccionada: null\r\n    }\r\n\r\n    //Crear el dispatch y el state\r\n    const [ state, dispatch ] = useReducer(tareaReducer, inicialState);\r\n\r\n    //Funciones\r\n\r\n    //Obtener las tareas de un proyecto\r\n    const obtenerTareas = async proyecto => {\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto } });\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Agregar una tarea a un proyecto\r\n    const agregarTarea = async tarea => {\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Valida y muestra un error \r\n    const validarTarea = () => {\r\n        dispatch({\r\n            type: VALIDAR_TAREA\r\n        });\r\n    }\r\n\r\n    //Eliminar tarea por id\r\n    const eliminarTarea = async (id, proyecto) => {\r\n        try {\r\n\r\n            await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto } });\r\n\r\n            dispatch({\r\n                type: ELIMINAR_TAREA,\r\n                payload: id\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Extrae una tarea para edicion\r\n    const guardarTareaActual = tarea => {\r\n        dispatch({\r\n            type: TAREA_ACTUAL,\r\n            payload: tarea\r\n        });\r\n    }\r\n\r\n    //Edita una tarea\r\n    const actualizarTarea = async tarea => {\r\n        try {\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n\r\n            dispatch({\r\n                type: ACTUALIZAR_TAREA,\r\n                payload: resultado.data.tarea\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const limpiarTarea = () => {\r\n        dispatch({\r\n            type: LIMPIAR_TAREA\r\n        });\r\n    }\r\n\r\n    return (\r\n        <TareaContext.Provider\r\n            value={{\r\n                tareasProyecto: state.tareasProyecto,\r\n                errorTarea: state.errorTarea,\r\n                tareaSeleccionada: state.tareaSeleccionada,\r\n                obtenerTareas,\r\n                agregarTarea,\r\n                validarTarea,\r\n                eliminarTarea,\r\n                guardarTareaActual,\r\n                actualizarTarea,\r\n                limpiarTarea\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TareaContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default TareaState;\r\n\r\n","import {\r\n    MOSTRAR_ALERTA,\r\n    OCULTAR_ALERTA\r\n} from '../../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case MOSTRAR_ALERTA:\r\n            return {\r\n                alerta: action.payload\r\n            }\r\n        case  OCULTAR_ALERTA:\r\n            return {\r\n                alerta: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { useReducer } from 'react';\r\nimport alertaReducer from \"./alertaReducer\";\r\nimport alertaContext from \"./alertaContext\";\r\nimport {\r\n    MOSTRAR_ALERTA,\r\n    OCULTAR_ALERTA\r\n} from '../../types';\r\n\r\n\r\nconst AlertaState = props => {\r\n\r\n    const inicialState = {\r\n        alerta: null\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(alertaReducer, inicialState);\r\n\r\n    //Funciones\r\n    const mostrarAlerta = ( msg, categoria ) => {\r\n        dispatch({\r\n            type: MOSTRAR_ALERTA,\r\n            payload: {\r\n                msg,\r\n                categoria\r\n            }\r\n        });\r\n\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: OCULTAR_ALERTA\r\n            });\r\n        }, 5000);\r\n    }\r\n\r\n    return (\r\n        <alertaContext.Provider\r\n            value={{\r\n                alerta: state.alerta,\r\n                mostrarAlerta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </alertaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AlertaState;","import { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n } from \"../../types\";\r\n\r\n export default (state, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_EXITOSO:\r\n        case REGISTRO_EXITOSO:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                mensaje: null,\r\n                cargando: false\r\n            }\r\n        case OBTENER_USUARIO:\r\n            return {\r\n                ...state,\r\n                autenticado: true,\r\n                usuario: action.payload,\r\n                cargando: false\r\n            }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                usuario: null,\r\n                autenticado: null,\r\n                mensaje: action.payload,\r\n                cargando: false\r\n            }\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}","import clienteAxios from \"./axios\";\r\n\r\nconst tokenAuth = token => {\r\n    if(token) {\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete clienteAxios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default tokenAuth;","import { useReducer } from 'react';\r\nimport authReducer from \"./authReducer\";\r\nimport authContext from \"./authContext\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from \"../../config/token\";\r\n\r\nimport { \r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n} from \"../../types\";\r\n\r\nconst AuthState = props => {\r\n\r\n    const inicialState = {\r\n        token: localStorage.getItem('token'),\r\n        autenticado: null,\r\n        usuario: null,\r\n        mensaje: null,\r\n        cargando: true\r\n    }\r\n\r\n    const [ state, dispatch ] = useReducer(authReducer, inicialState);\r\n\r\n    //Funciones\r\n    const registrarUsuario = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('api/usuarios', datos);\r\n\r\n            dispatch({\r\n                type: REGISTRO_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n            //Obtener usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n            \r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    //Retorna el usuario autenticado\r\n    const usuarioAutenticado = async () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token) {\r\n            //Funcion para enviar el token por headers\r\n            tokenAuth(token);\r\n        }\r\n\r\n        try {\r\n            const respuesta = await clienteAxios.get('/api/auth');\r\n            dispatch({\r\n                type: OBTENER_USUARIO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: LOGIN_ERROR\r\n            });\r\n        }\r\n    }\r\n\r\n    //Cuando el usuario inicia sesion\r\n    const iniciarSesion = async datos => {\r\n        try {\r\n            const respuesta = await clienteAxios.post('/api/auth', datos);\r\n            //console.log(respuesta);\r\n            dispatch({\r\n                type: LOGIN_EXITOSO,\r\n                payload: respuesta.data\r\n            });\r\n\r\n            //Obtener el usuario\r\n            usuarioAutenticado();\r\n        } catch (error) {\r\n\r\n            //console.log(error.response.data.msg);\r\n            const alerta = {\r\n                msg: error.response.data.msg,\r\n                categoria: 'alerta-error'\r\n            }\r\n\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: alerta\r\n            });\r\n        }\r\n    }\r\n\r\n    const cerrarSesion = () => {\r\n        dispatch({\r\n            type: CERRAR_SESION\r\n        });\r\n    }\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                autenticado: state.autenticado,\r\n                usuario: state.usuario,\r\n                mensaje: state.mensaje,\r\n                cargando: state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n        >\r\n            {props.children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;\r\n","import { useContext, useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n    \r\n    const authContext = useContext(AuthContext);\r\n    const { autenticado, cargando, usuarioAutenticado } = authContext\r\n\r\n    useEffect(() => {\r\n        usuarioAutenticado();\r\n    }, []);\r\n\r\n    return (\r\n        <Route { ...props } render={ props => !autenticado && !cargando ? (\r\n            <Redirect to=\"/\" />\r\n        ) : (\r\n            <Component { ...props } />\r\n        ) } \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nexport default RutaPrivada;\r\n\r\n//rafce","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\nimport ProyectoState from \"./context/proyectos/proyectoState\";\nimport TareaState from \"./context/tareas/tareaState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from \"./config/token\";\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\n\n//Revisar si hay un token\nconst token = localStorage.getItem('token');\nif(token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}